apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: thanos-store
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: thanos-store
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: object-store-gateway
    app.kubernetes.io/version: {{ .Values.image.tag }}
spec:
  replicas: {{ .Values.store.replicaCount }}
  serviceName: thanos-store
  selector:
    matchLabels:
      app.kubernetes.io/name: thanos-store
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: object-store-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: thanos-store
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: object-store-gateway
        app.kubernetes.io/version: {{ .Values.image.tag }}
    spec:
      serviceAccountName: {{ .Values.store.serviceAccount.name }}
      nodeSelector:
        kubernetes.io/os: linux
      {{- with .Values.store.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 120
      securityContext:
        fsGroup: 65534
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65534
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: thanos-store
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - store
            - --log.level=info
            - --log.format=logfmt
            - --data-dir=/var/thanos/store
            - --grpc-address=0.0.0.0:10901
            - --http-address=0.0.0.0:10902
            - --objstore.config=$(OBJSTORE_CONFIG)
            - --ignore-deletion-marks-delay=24h
          env:
            - name: OBJSTORE_CONFIG
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.store.objstore.secretName }}
                  key: {{ .Values.store.objstore.secretKey }}
            - name: HOST_IP_ADDRESS
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          ports:
            - name: grpc
              containerPort: {{ .Values.store.ports.grpc }}
            - name: http
              containerPort: {{ .Values.store.ports.http }}
          volumeMounts:
            - name: {{ .Values.store.volume.name }}
              mountPath: /var/thanos/store
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 10902
              scheme: HTTP
            periodSeconds: 30
            failureThreshold: 8
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 10902
              scheme: HTTP
            periodSeconds: 5
            failureThreshold: 20
          resources:
            {{- toYaml .Values.store.resources | nindent 12 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            readOnlyRootFilesystem: true
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.store.volume.name }}
        labels:
          app.kubernetes.io/name: thanos-store
          app.kubernetes.io/instance: {{ .Release.Name }}
          app.kubernetes.io/component: object-store-gateway
      spec:
        accessModes:
          {{- toYaml .Values.store.volume.accessModes | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.store.volume.storage }}
        {{- if .Values.store.volume.storageClassName }}
        storageClassName: {{ .Values.store.volume.storageClassName }}
        {{- end }}

