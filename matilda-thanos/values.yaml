# Namespace configuration
namespace:
  create: true
  name: "thanos"

# Global image configuration
image:
  repository: quay.io/thanos/thanos
  tag: v0.31.0
  pullPolicy: IfNotPresent

# Global image pull secrets
imagePullSecrets: []

# Name override for the application
nameOverride: ""

# Full name override for the application
fullnameOverride: ""

# Additional labels to add to all resources
extraLabels: {}

# Additional annotations to add to all resources
extraAnnotations: {}

# S3 Object Storage Configuration
# IMPORTANT: S3 credentials should be created externally for security
# Do not put sensitive credentials in values.yaml or Helm templates
objstore:
  # Existing secret name (REQUIRED - must be created externally)
  existingSecret: "thanos-objstore"
  # Secret key name in the secret
  secretKey: "thanos.yaml"

# Global service configuration
service:
  type: NodePort
  grpcPort: 10901
  httpPort: 10902
  remoteWritePort: 19291

# Query component configuration
query:
  replicaCount: 1
  service:
    type: NodePort
    grpcNodePort: 31093
    httpNodePort: 30093
  serviceAccount:
    name: thanos-query-v2
  serviceMonitor:
    enabled: true
    name: thanos-query-servicemonitor
    port: http
  resources: {}
  affinity: {}
  nodeSelector: {}

# Store component configuration
store:
  replicaCount: 1
  service:
    type: NodePort
    grpcNodePort: 31091
    httpNodePort: 30091
  ports:
    grpc: 10901
    http: 10902
  volume:
    name: data
    storage: 10Gi
    storageClassName: local-path
    accessModes: ["ReadWriteOnce"]
  objstore:
    secretName: thanos-objectstorage
    secretKey: thanos.yaml
  serviceAccount:
    name: thanos-store-v2
  serviceMonitor:
    enabled: true
    name: thanos-store-servicemonitor
    port: http
  resources: {}
  affinity: {}

# Receive Ingestor component configuration
receiveIngestor:
  replicaCount: 1
  service:
    type: NodePort
    grpcNodePort: 31092
    httpNodePort: 30092
  ports:
    http: 10902
    grpc: 10901
  serviceAccount:
    name: thanos-receive-v2
  serviceMonitor:
    enabled: true
    name: thanos-receive-servicemonitor
    port: http
  resources: {}
  affinity: {}
  nodeSelector: {}

# Receive Service configuration
receiveService:
  service:
    type: NodePort
    grpcNodePort: 32091
    httpNodePort: 32092
    remoteWriteNodePort: 32093
  ports:
    grpc: 10901
    http: 10902
    remoteWrite: 19291

# Receive StatefulSet configuration
receiveStatefulSet:
  replicas: 1
  minReadySeconds: 10
  serviceAccountName: thanos-receive-v2
  storage: 10Gi
  storageClassName: local-path
  affinity: {}
  nodeSelector: {}

# Ruler component configuration
ruler:
  enabled: false
  replicaCount: 1
  service:
    type: ClusterIP
    grpcPort: 10901
    httpPort: 10902
  serviceAccount:
    name: thanos-ruler
  serviceMonitor:
    enabled: true
    name: thanos-ruler-servicemonitor
    port: http
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi
  affinity: {}
  nodeSelector: {}

# Persistence configuration for PV/PVC
persistence:
  store:
    enabled: true
    size: 10Gi
    accessMode: ReadWriteOnce
    reclaimPolicy: Retain
    storageClassName: ""
    hostPath: /var/thanos/store
  receive:
    enabled: true
    size: 10Gi
    accessMode: ReadWriteOnce
    reclaimPolicy: Retain
    storageClassName: ""
    hostPath: /var/thanos/receive
